setwd("E:/Victor/Faculdade/projeto_bioestatistica_r_2023/tutorial_1_v2.1")
#Carregando o banco de dados
dados <- read.csv2("Banco de Dados 2_csv8.csv")
table(cut(dados$Salario, seq(0, 6, l = 7)))
table(cut(dados$Salario, seq(0, 6, l = 7)))
qtd_albumina <- c(5.1, 5, 5.2, 4.5, 4.8, 4.9, 5, 5.2, 5.4,
5.1, 4.9, 5, 4.9, 5.1, 5.3, 5.1, 5.1, 5.3,
4.7, 5.3, 4.7, 5.4, 5, 5.5, 5)
View(dados)
qtd_albumina <- c(5.1, 5, 5.2, 4.5, 4.8, 4.9, 5, 5.2, 5.4,
5.1, 4.9, 5, 4.9, 5.1, 5.3, 5.1, 5.1, 5.3,
4.7, 5.3, 4.7, 5.4, 5, 5.5, 5)
sort(qtd_albumina) #ordena os dados
range(qtd_albumina)
amp_total <- ceiling(max(qtd_albumina)-min(qtd_albumina))
amp_total
k <- nclass.FD(qtd_albumina)
k
length(qtd_albumina)
k <- ceiling((sqrt(length(qtd_albumina))))
k
c <- amp_total / (k-1)
c
<- min(qtd_albumina)
infclass <- min(qtd_albumina)
infclass
supclass <- infclass + (k*c)
supclass
brk <- seq(infclass,supclass,c)
brk
tabela_freq_albumina <- table(cut(qtd_albumina,breaks = brk,
right = FALSE))
tabela_freq_albumina
tabela_freq_albumina <- prop.table(tabela_freq_albumina)
tabela_freq_albumina
hist(qtd_albumina,
main = "Qtd de albumina",
xlab = "Qtd de albumina g/100 mL", ylab = "Freq. Absoluta",
col = c("blue"),
border = c("royalblue"),
breaks = brk,
right = FALSE,
axes = FALSE
)
axis(1, at=seq(infclass,supclass,c))
axis(2, at=seq(0,max(tabela_freq_albumina),2))
ggsave("grafico_histograma",
plot = last_plot(),
units = "in",
dpi = 600,
width = 8,
height = 6)
library(ggplot2)
ggsave("grafico_histograma",
plot = last_plot(),
units = "in",
dpi = 600,
width = 8,
height = 6)
ggsave("grafico_histograma",
plot = last_plot(),
units = "in",
dpi = 600,
width = 8,
height = 6)
rlang::last_error()
ggsave("grafico_histograma.png",
plot = last_plot(),
units = "in",
dpi = 600,
width = 8,
height = 6)
hist(qtd_albumina,
main = "Qtd de albumina",
xlab = "Qtd de albumina g/100 mL", ylab = "Freq. Absoluta",
col = c("blue"),
border = c("royalblue"),
breaks = brk,
right = FALSE,
axes = FALSE
)
axis(1, at=seq(infclass,supclass,c))
axis(2, at=seq(0,max(tabela_freq_albumina),2))
ggsave("grafico_histograma.png",
plot = last_plot(),
units = "in",
dpi = 600,
width = 8,
height = 6)
hist(qtd_albumina,
main = "Qtd de albumina",
xlab = "Qtd de albumina g/100 mL", ylab = "Freq. Absoluta",
col = c("blue"),
border = c("royalblue"),
breaks = brk,
right = FALSE,
axes = FALSE
) +
axis(1, at=seq(infclass,supclass,c)) +
axis(2, at=seq(0,max(tabela_freq_albumina),2))
axis(1, at=seq(infclass,supclass,c))
axis(2, at=seq(0,max(tabela_freq_albumina),2))
hist(qtd_albumina,
main = "Qtd de albumina",
xlab = "Qtd de albumina g/100 mL", ylab = "Freq. Absoluta",
col = c("blue"),
border = c("royalblue"),
breaks = brk,
right = FALSE,
axes = FALSE
)
axis(1, at=seq(infclass,supclass,c))
axis(2, at = seq(0, max(tabela_freq_albumina), 2),
labels = seq(0, max(tabela_freq_albumina), 2))
hist(qtd_albumina,
main = "Qtd de albumina",
xlab = "Qtd de albumina g/100 mL", ylab = "Freq. Absoluta",
col = c("blue"),
border = c("royalblue"),
breaks = brk,
right = FALSE,
axes = FALSE
)
axis(1, at=seq(infclass,supclass,c))
axis(2, at = seq(0, max(tabela_freq_albumina), 5))
# Crie um dataframe com seus dados
data <- data.frame(qtd_albumina)
# Crie o gráfico de histograma
ggplot(data, aes(x = qtd_albumina)) +
geom_histogram(binwidth = 0.2, fill = "blue", color = "royalblue") +
labs(
title = "Qtd de Albumina",
x = "Qtd de Albumina (g/100 mL)",
y = "Freq. Absoluta"
) +
scale_x_continuous(breaks = seq(min(qtd_albumina), max(qtd_albumina), by = 0.5)) +
scale_y_continuous(breaks = seq(0, 7, by = 1)) +
theme_minimal()
# Crie o gráfico de histograma
ggplot(data, aes(x = qtd_albumina)) +
geom_histogram(binwidth = 0.2, fill = "blue", color = "royalblue") +
labs(
title = "Qtd de Albumina",
x = "Qtd de Albumina (g/100 mL)",
y = "Freq. Absoluta"
) +
scale_x_continuous(breaks = seq(min(qtd_albumina), max(qtd_albumina), by = 0.5)) +
scale_y_continuous(breaks = seq(0, 12, by = 1)) +
theme_minimal()
hist(qtd_albumina,
main = "Qtd de albumina",
xlab = "Qtd de albumina g/100 mL", ylab = "Freq. Absoluta",
col = c("blue"),
border = c("royalblue"),
breaks = brk,
right = FALSE,
axes = FALSE
)
axis(1, at=seq(infclass,supclass,c))
# Crie um dataframe com seus dados
data <- data.frame(qtd_albumina)
# Especifique os limites de classe desejados
limits <- seq(4.4, 5.6, by = 0.2)
# Crie a variável categórica com base nos limites
data$intervalos <- cut(data$qtd_albumina, breaks = limits, right = FALSE)
# Crie o gráfico de histograma
ggplot(data, aes(x = intervalos)) +
geom_bar(fill = "blue", color = "royalblue") +
labs(
title = "Qtd de Albumina",
x = "Intervalos de Albumina (g/100 mL)",
y = "Freq. Absoluta"
) +
scale_x_discrete(labels = limits) +
scale_y_continuous(breaks = seq(0, 7, by = 1)) +
theme_minimal()
hist(qtd_albumina,
main = "Qtd de albumina",
xlab = "Qtd de albumina g/100 mL", ylab = "Freq. Absoluta",
col = c("blue"),
border = c("royalblue"),
breaks = brk,
right = FALSE,
axes = FALSE
)
axis(1, at=seq(infclass,supclass,c))
axis(2, at = seq(0, max(tabela_freq_albumina), 5))
hist(albumina,
main = "Qtd de albumina",
xlab = "Qtd de albumina g/100 mL", ylab = "Freq. Absoluta",
col = c("blue"),
border = c("royalblue"),
breaks = brk,
right = FALSE,
axes = FALSE
)
axis(1, at=seq(infclass,supclass,c))
axis(2, at=seq(0,max(tabelaDF_albumina),2))
hist(albumina,
main = "Qtd de albumina",
xlab = "Qtd de albumina g/100 mL", ylab = "Freq. Absoluta",
col = c("blue"),
border = c("royalblue"),
breaks = brk,
right = FALSE,
axes = FALSE
)
axis(1, at=seq(infclass,supclass,c))
hist(qtd_albumina,
main = "Qtd de albumina",
xlab = "Qtd de albumina g/100 mL", ylab = "Freq. Absoluta",
col = c("blue"),
border = c("royalblue"),
breaks = brk,
right = FALSE,
axes = FALSE
)
axis(1, at=seq(infclass,supclass,c))
axis(2, at = seq(0, max(tabela_freq_albumina), 5))
hist(qtd_albumina,
main = "Qtd de albumina",
xlab = "Qtd de albumina g/100 mL", ylab = "Freq. Absoluta",
col = c("blue"),
border = c("royalblue"),
breaks = brk,
right = FALSE,
axes = FALSE
)
axis(1, at=seq(infclass,supclass,c))
axis(2, at=seq(0,max(tabelaDF_albumina),2))
axis(2, at=seq(0,max(tabelaDF_albumina),2))
axis(1, at=seq(infclass,supclass,c))
axis(2, at=seq(0,max(tabela_freq_albumina),2))
#Construindo o Histograma
png("seu_grafico.png", width = 800, height = 600)
hist(qtd_albumina,
main = "Qtd de albumina",
xlab = "Qtd de albumina g/100 mL", ylab = "Freq. Absoluta",
col = c("blue"),
border = c("royalblue"),
breaks = brk,
right = FALSE,
axes = FALSE
)
axis(1, at=seq(infclass,supclass,c))
axis(2, at = seq(0, max(tabela_freq_albumina), 5))
dev.off()
axis(1, at=seq(infclass,supclass,c))
axis(2, at = seq(0, max(12), 5))
axis(1, at=seq(infclass,supclass,c))
axis(2, at = seq(0, max(20), 5))
axis(1, at=seq(infclass,supclass,c))
axis(2, at = seq(0, max(20), 2))
axis(1, at=seq(infclass,supclass,c))
axis(2, at = seq(0, max(15), 2))
axis(1, at=seq(infclass,supclass,c))
axis(2, at = seq(0, max(10), 2))
axis(1, at=seq(infclass,supclass,c))
axis(2, at = seq(0, max(10), 5))
hist(qtd_albumina,
main = "Qtd de albumina",
xlab = "Qtd de albumina g/100 mL", ylab = "Freq. Absoluta",
col = c("blue"),
border = c("royalblue"),
breaks = brk,
right = FALSE,
axes = FALSE
)
axis(1, at=seq(infclass,supclass,c))
axis(2, at = seq(0, max(10), 5))
hist(qtd_albumina,
main = "Qtd de albumina",
xlab = "Qtd de albumina g/100 mL", ylab = "Freq. Absoluta",
col = c("blue"),
border = c("royalblue"),
breaks = brk,
right = FALSE,
axes = FALSE
)
axis(1, at=seq(infclass,supclass,c))
axis(2, at = seq(0, max(20), 2))
doenca <- c(rep("leve", 30), rep("moderada", 15), rep("grave", 5))
doenca <- c(rep("leve", 30), rep("moderada", 15), rep("grave", 5))
freq_abs <- table(doenca)
freq_acum <- cumsum(freq_abs)
freq_perc <- round(prop.table(freq_abs) * 100, 2)
angulo <- round((freq_abs/sum(freq_abs)) * 360)
tabela_doenca <- data.frame(categorias = names(freq_abs),
frequencia_absoluta = as.numeric(freq_abs),
frequencia_acumulada = as.numeric(freq_acum),
porcentagem = freq_perc,
angulo = angulo)
View(tabela_doenca)
freq_acum
freq_acum
pie(tabela_doenca$Freq_Absoluta,
labels = "", col = c("red", "purple", "blue"),
clockwise = TRUE, main = "Gravidade da doenca")
legend("topright", legend = tabela_doenca$"Gravidade da Doenca",
fill = c("red", "purple", "blue"))
doenca <- c(rep("leve", 30), rep("moderada", 15), rep("grave", 5))
freq_abs <- table(doenca)
freq_acum <- cumsum(freq_abs)
freq_perc <- round(prop.table(freq_abs) * 100, 2)
angulo <- round((freq_abs/sum(freq_abs)) * 360)
tabela_doenca <- data.frame(categorias = names(freq_abs),
frequencia_absoluta = as.numeric(freq_abs),
frequencia_acumulada = as.numeric(freq_acum),
porcentagem = freq_perc,
angulo = angulo)
pie(tabela_doenca$Freq_Absoluta,
labels = "", col = c("red", "purple", "blue"),
clockwise = TRUE, main = "Gravidade da doenca")
pie(tabela_doenca$Freq_Absoluta,
labels = "", col = c("red", "purple", "blue"),
clockwise = TRUE, main = "Gravidade da doenca")
doenca <- c(rep("leve", 30), rep("moderada", 15), rep("grave", 5))
freq_abs <- table(doenca)
freq_acum <- cumsum(freq_abs)
freq_perc <- round(prop.table(freq_abs) * 100, 2)
angulo <- round((freq_abs/sum(freq_abs)) * 360)
tabela_doenca <- data.frame(categorias = names(freq_abs),
frequencia_absoluta = as.numeric(freq_abs),
frequencia_acumulada = as.numeric(freq_acum),
porcentagem = freq_perc,
angulo = angulo)
pie(tabela_doenca$Freq_Absoluta,
labels = "", col = c("red", "purple", "blue"),
clockwise = TRUE, main = "Gravidade da doenca")
pie(tabela_doenca$frequencia_absoluta,
labels = "", col = c("red", "purple", "blue"),
clockwise = TRUE, main = "Gravidade da doenca")
legend("topright", legend = tabela_doenca$"Gravidade da Doenca",
fill = c("red", "purple", "blue"))
pie(tabela_doenca$frequencia_absoluta,
labels = "", col = c("red", "purple", "blue"),
clockwise = TRUE, main = "Gravidade da doenca")
legend("topright", legend = tabela_doenca$categorias,
fill = c("red", "purple", "blue"))
pie(tabela_doenca$frequencia_absoluta,
labels = "", col = c("red", "purple", "blue"),
clockwise = TRUE, main = "Gravidade da doença")
legend("topright", legend = tabela_doenca$categorias,
fill = c("red", "purple", "blue"))
pie(tabela_doenca$frequencia_absoluta,
labels = "", col = c("red", "purple", "blue"),
clockwise = TRUE, main = "Gravidade da doença") +
legend("topright", legend = tabela_doenca$categorias,
fill = c("red", "purple", "blue"))
pie(tabela_doenca$frequencia_absoluta,
labels = "", col = c("red", "purple", "blue"),
clockwise = TRUE, main = "Gravidade da doença") +
legend("topright", legend = tabela_doenca$categorias,
fill = c("red", "purple", "blue"))
pie(tabela_doenca$frequencia_absoluta,
labels = "", col = c("red", "purple", "blue"),
clockwise = TRUE, main = "Gravidade da doença")
legend("topright", legend = tabela_doenca$categorias,
fill = c("red", "purple", "blue"))
pie(tabela_doenca$frequencia_absoluta,
labels = "", col = c("red", "purple", "blue"),
clockwise = TRUE, main = "Gravidade da doença") +
legend("topright", legend = tabela_doenca$categorias,
fill = c("red", "purple", "blue"))
percent_labels <- paste(tabela_doenca$categorias, "\n", tabela_doenca$porcentagem, "%", sep = "")
legend("topright", legend = tabela_doenca$categorias,
fill = c("red", "purple", "blue"))
pie(tabela_doenca$frequencia_absoluta,
labels = "", col = c("red", "purple", "blue"),
clockwise = TRUE, main = "Gravidade da doença") +
legend("topright", legend = tabela_doenca$categorias,
fill = c("red", "purple", "blue"))
percent_labels <- paste(tabela_doenca$categorias, "\n", tabela_doenca$porcentagem, "%", sep = "")
text(x = 1.1, y = 0, labels = percent_labels, cex = 0.8)
legend("topright", legend = tabela_doenca$categorias,
fill = c("red", "purple", "blue"))
pie(tabela_doenca$frequencia_absoluta,
labels = "", col = c("red", "purple", "blue"),
clockwise = TRUE, main = "Gravidade da doença")
percent_labels <- paste(tabela_doenca$categorias, "\n", tabela_doenca$porcentagem, "%", sep = "")
text(x = 1.1, y = 0, labels = percent_labels, cex = 0.8)
legend("topright", legend = tabela_doenca$categorias,
fill = c("red", "purple", "blue"))
pie(tabela_doenca$frequencia_absoluta,
labels = "", col = c("red", "purple", "blue"),
clockwise = TRUE, main = "Gravidade da doença") +
legend("topright", legend = tabela_doenca$categorias,
fill = c("red", "purple", "blue"))
tabela_prof <- data.frame(
Professores = c("Joao", "Luisa", "Ana", "Marcos"),
Altura_m = c(1.60, 1.55, 1.75, 1.70),
N_de_Pets = c(5, 1, 6, 0),
Dificuldade_da_Disciplina = c("Média", "Média", "Alta", "Baixa"),
Área_de_atuação = c("Zoologia", "Anatomia", "Botânica", "Educação")
)
tabela_prof <- setNames(tabela_prof,
c("Professores", "Altura(m)", "N° de pets",
"Dificuldade da Disciplina", "Área de atuação"))
library(kableExtra)
kable(tabela_prof) %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
kable_styling(bootstrap_options = "condensed", full_width = FALSE) %>%
row_spec(0, bold = TRUE) %>%
row_spec(1:nrow(tabela_prof), align = "c")
var_integer <- 10
var_double <- 5.5
var_string <- "sou um texto"
class(var_integer) ; class(var_double) ; class(var_string)
library(dplyr)
dados <- read.csv2("Banco de Dados 2_csv8.csv")
View(dados)
glimpse(dados)
library(rmarkdown)
paged_table(dados)
table(dados$Genero)
table(dados$Nivel_de_Ensino)
table(dados$Genero, dados$Nivel_de_Ensino)
prop.table(table(dados$Genero))
prop.table(table(dados$Nivel_de_Ensino))
prop.table(table(dados$Genero, dados$Nivel_de_Ensino))
table(dados$N_Filhos)
prop.table(table(dados$N_Filhos))
range(dados$Salario)
nclass.Sturges(dados$Salario)
table(cut(dados$Salario, seq(0, 6, l = 7)))
library(rmarkdown)
qtd_albumina <- c(5.1, 5, 5.2, 4.5, 4.8, 4.9, 5, 5.2, 5.4, 5.1, 4.9, 5, 4.9, 5.1, 5.3, 5.1, 5.1, 5.3, 4.7, 5.3, 4.7, 5.4, 5, 5.5, 5)
sort(qtd_albumina) #ordena os dados
range(qtd_albumina) #descobre o menor e o maior número
amp_total <- ceiling(max(qtd_albumina)-min(qtd_albumina))
amp_total
k <- nclass.FD(qtd_albumina)
k
length(qtd_albumina)
k <- ceiling((sqrt(length(qtd_albumina))))
k
c <- amp_total / (k-1)
c
infclass <- min(qtd_albumina)
infclass
supclass <- infclass + (k*c)
supclass
brk <- seq(infclass,supclass,c)
brk
tabela_freq_albumina <- table(cut(qtd_albumina,breaks = brk, right = FALSE))
tabela_freq_albumina
tabela_freq_albumina <- prop.table(tabela_freq_albumina)
tabela_freq_albumina
hist(qtd_albumina,
main = "Qtd de albumina",
xlab = "Qtd de albumina g/100 mL", ylab = "Freq. Absoluta",
col = c("blue"),
border = c("royalblue"),
breaks = brk,
right = FALSE,
axes = FALSE
)
axis(1, at=seq(infclass,supclass,c))
axis(2, at=seq(0,max(tabela_freq_albumina),2))
doenca <- c(rep("leve", 30), rep("moderada", 15), rep("grave", 5))
freq_abs <- table(doenca)
freq_acum <- cumsum(freq_abs)
freq_perc <- round(prop.table(freq_abs) * 100, 2)
angulo <- round((freq_abs/sum(freq_abs)) * 360)
tabela_doenca <- data.frame(categorias = names(freq_abs),
frequencia_absoluta = as.numeric(freq_abs),
frequencia_acumulada = as.numeric(freq_acum),
porcentagem = freq_perc,
angulo = angulo)
tabela_doenca <- tabela_doenca[, c("categorias", "frequencia_absoluta", "frequencia_acumulada", "porcentagem.Freq", "angulo.Freq")]
tabela_doenca <- setNames(tabela_doenca,
c("Gravidade da Doenca", "Freq_Absoluta",
"Freq_Acumulada", "Porcentagem", "Angulação"))
library(kableExtra)
kable(tabela_doenca) %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
kable_styling(bootstrap_options = "condensed") %>%
row_spec(0, bold = TRUE) %>%
row_spec(1:nrow(tabela_doenca), align = "c")
pie(tabela_doenca$Freq_Absoluta,
labels = "", col = c("red", "purple", "blue"),
clockwise = TRUE, main = "Gravidade da doenca")
legend("topright", legend = tabela_doenca$"Gravidade da Doenca",
fill = c("red", "purple", "blue"))
citation()
citation("kableExtra")
citation("rmarkdown")
